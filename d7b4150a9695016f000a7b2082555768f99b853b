{
  "comments": [
    {
      "key": {
        "uuid": "bada0100_f5955540",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "license header missing",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_e1b4bf36",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 2789
      },
      "writtenOn": "2018-10-25T11:27:39Z",
      "side": 1,
      "message": "I think Component anno is redundant here.",
      "range": {
        "startLine": 27,
        "startChar": 1,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_759c05c1",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "There are no tests for this class",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 31
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_75d40520",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "- make logger static final, \n- also rethink the uppercase variable name - is the LOGGER really a constant? is it fully immutable once created ? If not, then change it to lowercase. a constant is more than just \u0027static final\u0027 keywords when it comes to object references. The object itself has to be immutable.",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_01978391",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 2789
      },
      "writtenOn": "2018-10-25T11:27:39Z",
      "side": 1,
      "message": "it is used only in constructor, it is not necessary to be a field",
      "range": {
        "startLine": 33,
        "startChar": 16,
        "endLine": 33,
        "endChar": 20
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_2192c79f",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 2789
      },
      "writtenOn": "2018-10-25T11:27:39Z",
      "side": 1,
      "message": "the same as above",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 11
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f596b593",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "Those fields would be private if they were set in constructor",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 36,
        "endChar": 28
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f5d1d5fb",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T14:30:22Z",
      "side": 1,
      "message": "Sorry, static, not private.",
      "parentUuid": "bada0100_f596b593",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 36,
        "endChar": 28
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_959f29b4",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "This class is dependent on two more specific classes. That\u0027s the violation of dependency invection principle.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 53
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_552a212d",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "Fully agree, this is a clear sign that no unit tests exist:) Dependency injection can be easily added considering you can use spring to wire the dependencies (of course without breaking encapsulation and testability)",
      "parentUuid": "bada0100_959f29b4",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 53
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f5af95e1",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "I\u0027 not sure if I\u0027m correct, but I don\u0027t like starting simulatior in init method. You can\u0027t have this class as a bean without running simulator every time",
      "range": {
        "startLine": 51,
        "startChar": 8,
        "endLine": 51,
        "endChar": 32
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_35de7d40",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "A good practice is to use OS-independent path separator logic, instead of string concatenation.",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f520f54a",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "technically this is not a properly defined rest resource, rather a method type url:) I\u0027d suggest renaming it to a resource: /registration. The methods you can invoke on it can be easily represented with http methods :)",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_151c9912",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "Suggestion: use Spring ExceptionHandler for handling the exception in a cleaner way without relying heavily on a programmatic approach.",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_e1e27f2e",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 2789
      },
      "writtenOn": "2018-10-25T11:27:39Z",
      "side": 1,
      "message": "I think that it would be safer to change this method to private static. When you call non-static method in constructor, it is possible to use the class field that has not been initialised yet.",
      "range": {
        "startLine": 80,
        "startChar": 17,
        "endLine": 80,
        "endChar": 31
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_d515b1e5",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "This is true that it would have been safer to make this method static and independent from the instance, but at the same time it strongly implies that this logic does not belong in this class and should be provided during construction. This can be done using spring without losing the testable aspect of this class.",
      "parentUuid": "bada0100_e1e27f2e",
      "range": {
        "startLine": 80,
        "startChar": 17,
        "endLine": 80,
        "endChar": 31
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_5580e145",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "Those properties should be injected. Right now this class does two things - reads property file and as a controller. So it has two reasons to change - that is a violation of single responsibility principle.",
      "range": {
        "startLine": 84,
        "startChar": 12,
        "endLine": 84,
        "endChar": 67
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b51a6d15",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "I second this, SR principle is broken, and properties have to be loaded during construction automatically by the class itself. \nThis should be separated and provided.",
      "parentUuid": "bada0100_5580e145",
      "range": {
        "startLine": 84,
        "startChar": 12,
        "endLine": 84,
        "endChar": 67
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_95d72923",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/controller/WireMockController.java",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "If I\u0027m not mistaken the enablePresets flag is not something that is changed during runtime. If the value won\u0027t change after construction, a better design approach would inject the final result during construction into this bean, instead of providing a switch for making the decision. There is no need to have a switch flag at this level because it suggests that something can change in the flow dynamically, which is untrue. Don\u0027t provide conditions for a flow, just provide the flow. It\u0027s crucial to make the decisions as quickly as possible if we can.",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b5b90d30",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/Simulator.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "Again, violation of dependency inversion principle.",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 40
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_357d1d6f",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/Simulator.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "this method can be static. It\u0027s bad practise to call non-static methods from constructor.",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 47
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b5f10dcf",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/Simulator.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "It is bad practice but invoking static methods isn\u0027t also a good approach. If something is static it is not part of the class instance, so it may be a good candidate for extraction in proper Dependency Injection. My suggestion, avoid any kind of method invocation (instance nor static) inside a constructor. Use a constructor to provide dependencies only. \nUse block initializers for logic (either instance, which or run after super() or static blocks). They are underused for such purpose and would be better suited for i.e. log configuration.",
      "parentUuid": "bada0100_357d1d6f",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 51,
        "endChar": 47
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_61ce8fb6",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/Simulator.java",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 2789
      },
      "writtenOn": "2018-10-25T11:27:39Z",
      "side": 1,
      "message": "this is quite dangerous, you call method in constructor that uses non-static class field (server).",
      "range": {
        "startLine": 58,
        "startChar": 17,
        "endLine": 58,
        "endChar": 36
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_55af8194",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/extensions/PresetsLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "license header missing",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_95be49d3",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/extensions/PresetsLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "- add static\n- reconsider uppercase - is the logger really a constant? (see my previous comment)",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_75a2c5af",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/extensions/PresetsLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "hmm loadPresets is a little misleading here isn\u0027t it? :)\nIt does loadPresets from the files, but also registers them in the simulator. Kind of tricky and not quite clear from the API(public method) standpoint. Please reconsider a slightly different name :)",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_35ac3da0",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/extensions/PresetsLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "While there is nothing wrong with this class, why not simply use a pure java approach using getResource ? This way we could eliminate an unnecessary Spring import. Just a suggestion :)",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_752725b7",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/extensions/PresetsLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "This lambda isn\u0027t easy to understand. I thought that you\u0027re checking if path leads to file, but it actually checks if file is a file or doesn\u0027t exist.\n\nMy suggestion would be either to implement that literally:\n    file.toFile().isFile() || !file.toFile.exists()\n\nor just create a functions with name isFileOrDoesntExists()",
      "range": {
        "startLine": 57,
        "startChar": 28,
        "endLine": 57,
        "endChar": 56
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_b5902d96",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/extensions/PresetsLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "There can be whitespaces before array starts ;)\n\nAdd test to cover that case.",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 55
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_55b8e1e4",
        "filename": "vid-ext-services-simulator/src/main/java/org/onap/simulator/wiremock/extensions/PresetsLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "can we change the logic a little bit so that we can have one point leading to where the simulator registration occurs? This can be wrapped in a simple private method call. It is important because a simulator is an outside dependency that is called the same way multiple times.",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_1591f951",
        "filename": "vid-ext-services-simulator/src/main/resources/wiremock.properties",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "Shouldn\u0027t this file be under the wiremock resource subdir ?",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_559d4158",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/util/JsonUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "license header missing",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_d59a916d",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/util/JsonUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "If you have a util class, there usually is one approach to using it - through the static methods it provides. There is no need for relying on instances here.\nDo the following:\n- make it final\n- add a private constructor so that static members are not accessed through references if someone creates an object by mistake",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_35219d9f",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/util/JsonUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T09:46:00Z",
      "side": 1,
      "message": "I would change the name of the function to actaully represent what it does.",
      "range": {
        "startLine": 8,
        "startChar": 25,
        "endLine": 8,
        "endChar": 38
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_75896525",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/util/JsonUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "Agree if you needed to add a comment to explain what the method does, just rename the method so that it better expresses the functionality",
      "parentUuid": "bada0100_35219d9f",
      "range": {
        "startLine": 8,
        "startChar": 25,
        "endLine": 8,
        "endChar": 38
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_359afd63",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/wiremock/SimulatorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "license header missing",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_1578192a",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/wiremock/SimulatorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "I think the port and simulator instance can be defined in the field",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_d5713145",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/wiremock/SimulatorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "Suggestion - always use static imports, there is no added benefit from writing the class each time. This is especially important in case of many Asserts, because it affects the readability.",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_9593a94e",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/wiremock/extensions/PresetsLoaderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T12:23:14Z",
      "side": 1,
      "message": "license header missing",
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_300a0b22",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/wiremock/extensions/PresetsLoaderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 2795
      },
      "writtenOn": "2018-10-26T14:30:22Z",
      "side": 1,
      "message": "I think mock must be created per test. It will matter when you have more than 1 test.",
      "range": {
        "startLine": 15,
        "startChar": 40,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_f020034b",
        "filename": "vid-ext-services-simulator/src/test/java/org/onap/simulator/wiremock/extensions/PresetsLoaderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-10-26T15:38:03Z",
      "side": 1,
      "message": "Actually, they way junit works is it creates a new instance of the class before running each @Test. So from a JUnit perspective this code and approach is completely fine, no state is shared between the tests (unless you use static).",
      "parentUuid": "bada0100_300a0b22",
      "range": {
        "startLine": 15,
        "startChar": 40,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "d7b4150a9695016f000a7b2082555768f99b853b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}