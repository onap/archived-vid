{
  "comments": [
    {
      "key": {
        "uuid": "85508b74_677e9d31",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controller/MsoControllerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 2815
      },
      "writtenOn": "2019-05-17T10:55:09Z",
      "side": 1,
      "message": "It seems to me that this is a little bit over-complicated especially because of the unnecessary reliance on the never-preferred arg-captor which led to loop assertion:) On top that the any() matcher does not make the implementation safe to changes. I\u0027d suggest you rewrite this in a more simplified manner. Few tips:\n- avoid arg capture, prefer ArgumentMatcher if no equals/hashcode contracts exists (or implement it). Arg captor does quite fit the BDD style of testing, where readability is crucial and you want to read the test step-by-step (from definition, through execution to assertion). Asserting values that are part of execution seems to break this e2e flow. \n- avoid any matchers - using them usually is a shortcut that makes the test easily breakable\n- when dealing with big pojos that are json representations consider using test resources for providing the json file (and ser/deser it)instead of constructing bloated object structures for test data inside the test class. Always have readability in mind.\n\nHere is a quick example of I\u0027d recommend rewriting the tests:\n\n    @Test\n    public void shouldDelegateNewInstanceCreation() throws Exception {\n        RequestDetails expectedRequestDetails \u003d new RequestDetails();\n        expectedRequestDetails.setAdditionalProperty(\"name\", \"value\");\n        String payload \u003d objectMapper.writeValueAsString(expectedRequestDetails);\n        MsoResponseWrapper expectedResponse \u003d new MsoResponseWrapper(200, \"test123\");\n        given(msoBusinessLogic.createSvcInstance(expectedRequestDetails)).willReturn(expectedResponse);\n\n        mockMvc.perform(post(\"/mso/mso_create_svc_instance\")\n            .content(payload)\n            .contentType(APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().json(objectMapper.writeValueAsString(expectedResponse)));\n        verify(cloudService).enrichRequestWithCloudOwner(expectedRequestDetails);\n    }",
      "revId": "0688f663ebdde1caf7ba7bbec278a9cdd700df6c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8213bf6_0c4ea040",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controller/MsoControllerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 2815
      },
      "writtenOn": "2019-05-17T10:55:09Z",
      "side": 1,
      "message": "Remove this duplicate verification - check my comment below",
      "revId": "0688f663ebdde1caf7ba7bbec278a9cdd700df6c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "209f714f_7761af5c",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controller/MsoControllerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 2815
      },
      "writtenOn": "2019-05-17T10:55:09Z",
      "side": 1,
      "message": "Remove this duplicate verification - check my comment below",
      "revId": "0688f663ebdde1caf7ba7bbec278a9cdd700df6c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "983cbe8b_4ba8424b",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controller/MsoControllerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 2815
      },
      "writtenOn": "2019-05-17T10:55:09Z",
      "side": 1,
      "message": "There is no need to concatenate params in the url like this. get()/post() etc methods rely on templates. Check the signature in javadoc. All you need to do is pass the url as a complete template get(\"/mso_get_man_task/{originalRequestId}\", originalRequestId). The get method accepts varags for the params. A lot cleaner.",
      "revId": "0688f663ebdde1caf7ba7bbec278a9cdd700df6c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "954bf62b_3a8e8375",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controller/MsoControllerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 2815
      },
      "writtenOn": "2019-05-17T10:55:09Z",
      "side": 1,
      "message": "Do not verify invocations of methods for which you previously record expected behavior. The Given section is a verification in itself - if the given manualTasks object is not return - the test will fail.",
      "revId": "0688f663ebdde1caf7ba7bbec278a9cdd700df6c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}