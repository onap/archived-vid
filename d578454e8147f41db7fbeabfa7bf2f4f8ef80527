{
  "comments": [
    {
      "key": {
        "uuid": "1a76adc5_8dc00251",
        "filename": "vid-app-common/src/main/java/org/onap/vid/controllers/HealthCheckController.java",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "There is no need to add/reinvent the wheel by adding your own HttpStatus code representation :) While it is a good change to have statuses represented by constants - Https statuses usage is a standard and so common that it has already been implemented by 3rd party libs that provide web functionality -i.e. apache, spring and even jdk to an extent(javax.ws.rs.core.Response.Status). Since the Rest controller is a spring implemention it would seem natural to use the Spring org.springframework.HttpStatus class :) Please remove custom impl and replace it with existing spring representation.",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_ed4176a9",
        "filename": "vid-app-common/src/main/java/org/onap/vid/controllers/HealthCheckController.java",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "1. please change this class from inner nested to static nested. Basically non-static inner classes have a relation with the surrounding instance (can access its members, can cause serialization issues etc) and is not the best for encapsulation. Joshua Bloch has given a good reason in Effective java:) efectivejava.blogspot.com/2013/07/item-22-favor-static-member-classes.html\n\nAlso remember that inner classes cannot define static members. So static factory methods and constants cannot be added.\n\nAs a general rule of thumb it\u0027s always better to use nested static classes.\n\n2. For readability purposes move this class definition to the end of the class, after all the methods that use it.",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_8d1802d4",
        "filename": "vid-app-common/src/main/java/org/onap/vid/controllers/HealthCheckController.java",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "What was the purpose of renaming message field to detail ?\nThis introduced a naming inconsistency - the variable name changes its meaning during assignment. Please stick to one name all the way. I\u0027d suggest detailedMsg",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_60d6cd29",
        "filename": "vid-app-common/src/main/java/org/onap/vid/controllers/HealthCheckController.java",
        "patchSetId": 4
      },
      "lineNbr": 102,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "This method should not:\n-be public but private instead since it is not part of the rest api. Also a good idea would be to move it to the bottom of the class, after the last usage\n-have the @SuppressWarnings annotation. Instead the warnings should be fixed not sweeped under a rug :)",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_adab7e73",
        "filename": "vid-app-common/src/main/java/org/onap/vid/controllers/HealthCheckController.java",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "Method name - should be camelcase - getHealth... :)",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_806449b9",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controllers/HealthCheckControllerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "Unit tests are not comprehensive enough. Not all logic in the HealthCheckController has been tested - there are missing test cases verifying failed responses in case of caught exceptions. Please add them :) This of course this will require some changes with the getProfileCount method.",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_0d007232",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controllers/HealthCheckControllerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "Typo, no camelcase - rename to testGetHealth... :)",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_cdf59a51",
        "filename": "vid-app-common/src/test/java/org/onap/vid/controllers/HealthCheckControllerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 2815
      },
      "writtenOn": "2018-09-20T15:57:56Z",
      "side": 1,
      "message": "The 200 OK status can be replaced with spring HttpStatus Code constant :)",
      "revId": "d578454e8147f41db7fbeabfa7bf2f4f8ef80527",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}